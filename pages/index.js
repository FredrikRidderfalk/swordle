import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import db from "../assets/db.json";

export default function Home() {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.js</code>
        </p>

        {db.solutions.map((word, index) => (
          <p key={index}>Secret word: {word.word}</p>
        ))}

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

/*
Data we need to track:
  • Solution
    - 5 letter string, e.g. "cloud"
  • Past guesses
    - an array of past guesses
    - each past guess is an array of letter objects [{}, {}, {}, {}, {}]
    - each object represents a letter in the guess word {key: "a", color: "yellow"}
  • Current guess
    - string "cloud"
  • Keypad letters
    - array of letter objects [{key: "a", color: "yellow"}, {key: "b", color: "green"}, {}, {}, {}]
  • Number of turns
    - an integer 0 - 6

Game process:
  • Entering words
    - user enters a letter and a square is filled with that letter
    - when a user hits delete it deletes the previous letter
    - when a user hits enter it submits the word
      -- if all squares are not filled with letters then the word is not submitted
      -- if that word has already been used in a previous guess then the word is not submitted
  • Checking submitted words:
    - each letter is checked to see if it matches the solution
    - each letter is assigned a color based on its inclusion in the solution
      -- exact matches are green
      -- partial matches are yellow
      -- no matches are gray
    - the guess is added to the grid with the correct colors
    - the current guess moves to the next row
    - the keypad letters are updated
  • Ending the game:
    - when the guessed word fully matches the solution:
      -- a modal pops up and says "Golly gosh, that was amazing!"
    - when the user runs out of guesses:
      -- a modal pops up and says "Unlucky"
*/
